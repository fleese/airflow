Airflow 是一个程序化编写、调度和监控工作流的平台。
用airflow去编写DAGs(有向无环图)的工作流。airflow用一组woker按照制定的依赖关系去执行你的任务。丰富的命令行工具使操作负责的DAGs变得容易。
丰富的用户接口使您可以轻松地可视化生产中运行的管道，监控任务的进度以及在需要时去解决问题。用code定义工作流时，它将变得更易于维护、迭代，测试和协作。

设计原则
动态：Airflow的pipeline配置为代码（Python），允许动态生成管道。这意味着我们可以编写代码去动态的实例化pipeline。
可扩展：方便的定义自己的operator、executor和适合自身环境的library。
优雅：airflow的pipeline是精益而明确的，使用功能强大的Jinja模板引擎将参数化脚本内置于Airflow的核心。
可扩展：Airflow具有模块化体系结构，并使用消息队列来协调任意数量的工作者。airflow已准备好了无限扩展。

多说一点
Airflow不是一个数据流的解决方案，任务不能将数据从数据从一个地方转移到另外一个地方（尽管任务能交换元数据）。airflow不同于spark stream和storm，它
更像是Oozie或Azkaban。

airflow建议不要随意改动workflow，你可以认为workflow中的task结构仅比数据库结构稍微动态一些。airflow希望workflow中各个节点的运行是相似性，这样可以清晰的划分work单元和节点之间的运行顺序。



